# Грокаем Алгоритмы - книга прочитать!!! https://yadi.sk/i/S4NHiA3JAL1-4g

# 1. Создать список и заполнить его элементами различных типов данных.
#   Реализовать скрипт проверки типа данных каждого элемента.
#   Использовать функцию type() для проверки типа.
#   Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

# l1 = [1, "строка", [1, 2, 3], {1, 2, 3}, {'key_1': 'val_1', 'key_2': 'val_2'}, (1, 2, 3), True, None]
# for el in l1:
#     print(type(el))
#
#
# # 2. Для списка реализовать обмен значений соседних элементов, т.е.
# #   Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# #   При нечетном количестве элементов последний сохранить на своем месте.
# #   Для заполнения списка элементов необходимо использовать функцию input().
# l2 = []
# while True:
#     b = input("Введите элемент массива ")
#     l2.append(b)
#     a = input("Если хотите остановить ввод элементов введите + ")
#     if a == "+":
#         break
# print("Получившийся список ", l2, ", теперь обменяем элементы с индексами 0 и 1, 2 и 3 и т.д.")
# lenl2 = len(l2)
# if lenl2 % 2 != 0:
#     lenl2 = lenl2 - 1
# while lenl2 > 0:
#     l2[lenl2 - 2], l2[lenl2 - 1] = l2[lenl2 - 1], l2[lenl2 - 2]
#     lenl2 -= 2
# print("После обмена список стал таким", l2)
#
# # 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# #   Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# #   Напишите решения через list и через dict.
#
# month = int(input("Введите месяц в виде целого числа от 1 до 12 "))
# if month >= 1 and month <= 12:
#     listmonth = ["зима", "весна", "лето", "осень"]
#     if month == 1 or month == 2 or month == 12:
#         printmonth = listmonth[0]
#     elif month == 3 or month == 4 or month == 5:
#         printmonth = listmonth[1]
#     elif month == 6 or month == 7 or month == 8:
#         printmonth = listmonth[2]
#     elif month == 9 or month == 10 or month == 1:
#         printmonth = listmonth[3]
#     print("Решение через list", printmonth)
#
#     dictmonth = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето', 7: 'лето', 8: 'лето', 9: 'осень',
#                  10: 'осень', 11: 'осень', 12: 'зима'}
#     print("Решение через dict", dictmonth.get(month))
# else:
#     print("Номер месяца может быть только от 1 до 12")

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
#   Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
#   Если в слово длинное, выводить только первые 10 букв в слове.

strokaslov = input("Введте несколько слов ")

for ind, el in enumerate(strokaslov, 1):
    print(ind, el)

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
#   У пользователя необходимо запрашивать новый элемент рейтинга.
#   Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
#       Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#       Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#       Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#       Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
#       Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
#   Каждый кортеж хранит информацию об отдельном товаре.
#   В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
#   Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
#       Пример готовой структуры:
#       [
#       (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#       (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#       (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#       ]
#   Необходимо собрать аналитику о товарах.
#   Реализовать словарь, в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
#       Пример:
#       {
#       “название”: [“компьютер”, “принтер”, “сканер”],
#       “цена”: [20000, 6000, 2000],
#       “количество”: [5, 2, 7],
#       “ед”: [“шт.”]
#       }
